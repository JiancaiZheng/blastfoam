name: Deployment

on:
  push:
    branches:
      - "main"
      - "master"
      - "staging"
      - "develop"

concurrency:
  #* Only run one run at a time
  group: blastfoam
  cancel-in-progress: true

jobs:
  version:
    name: Semantic Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Version
        id: version
        uses: synthetik-technologies/actions/composites/semantic-versioning@v1.2.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Update Debian Control
        run: sed -i "s/Version:.*/Version:\ ${{ env.RELEASE }}/" debian/blastfoam/DEBIAN/control
      - name: Commit Version Change
        uses: EndBug/add-and-commit@v9
        with:
          add: "debian/blastfoam/DEBIAN/control"
          author_name: Synthetik Bot
          author_email: support@synthetik-technologies.com
          message: "ci: bumped Debian package version to ${{ steps.version.outputs.version }}"
          push: true

  build:
    runs-on: ["self-hosted", "deb", "openfoam"]
    name: Build BlastFoam
    needs: [version]
    defaults:
      run:
        working-directory: blastfoam-src
    steps:
      - name: Checkout blastFOAM
        uses: actions/checkout@v3
        with:
          path: blastfoam-src
      - name: Build Tar for Cache
        #* This creates a cache tarball that can be used to skip builds
        #* in the next step if the files remain unchanged.
        run: |
          tar -czf checksum.tar.gz --mtime='UTC 2019-01-01' --group=0 --owner=0 \
            --numeric-owner --sort=name Makefile applications debian etc src
      - name: Check Cache
        #* Checks the cache tarball and only rebuilds if there were changes
        id: check-cache
        uses: actions/cache@v3
        with:
          path: blastfoam_*.deb
          key: ${{ hashFiles('blastfoam-src/checksum.tar.gz') }}
      - name: Build from makefile
        #* This builds the package from the makefile ONLY if the cache tarball is changed.
        if: ${{ steps.check-cache.outputs.cache-hit != 'true' }}
        run: debuild --no-lintian -i -nc -us -uc -b --jobs=auto
        #* Debuild Flags
        #* --no-lintian: Do not run lintian on the package
        #* -i: Install the package
        #* -nc: Do not clean the build directory (this removes '.orig' files from tests)
        #* -us: Do not sign the package
        #* -uc: Do not sign the changes file
        #* -b: Build binary package
        #* --jobs=10: Run 10 jobs in parallel
      - name: Output Debian Package
        uses: actions/upload-artifact@v3
        with:
          name: blastfoam_untested.deb
          path: ${{ github.workspace }}/blastfoam_*.deb
          retention-days: 7

  build-docker:
    name: Build Docker Image
    needs:
      - build
      - version
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout blastFOAM
        uses: actions/checkout@v3
      - name: Download Debian Package
        uses: actions/download-artifact@v3
        with:
          name: blastfoam_untested.deb
          path: ${{ github.workspace }}
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Image
        uses: synthetik-technologies/actions/composites/docker-build-push@v1.2.0
        with:
          ssh-key-needed: "false"
          image: blastfoam-dev
          image-registry: ghcr.io/synthetik-technologies
          version: ${{ needs.version.outputs.version }}
