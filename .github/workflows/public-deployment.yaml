name: Public Deployment

on:
  workflow_call:
    inputs:
      prod_repo:
        required: true
        type: string
      tag:
        required: true
        type: string

jobs:
  code:
    name: Deploy Source Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Private Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.SYN_BOT_READ_WRITE }}
          ref: ${{ github.ref }}

      - name: Push Code Publically
        run: |
          git push --force "https://github.com/${{ inputs.prod_repo }}" HEAD:master
          git push --force "https://github.com/${{ inputs.prod_repo }}" v${{ inputs.tag }}

      - name: Copy Release Publically
        env:
          GH_TOKEN: ${{ secrets.SYN_BOT_READ_WRITE }}
        run: |
          gh release download v${{ inputs.tag }} -p '*.deb'
          ls -la
          gh release view -R "${{ inputs.prod_repo }}" || gh release create -R "${{ inputs.prod_repo }}" ${{ inputs.tag }} #* View the release; if it doesn't exist create it
          gh release upload -R "${{ inputs.prod_repo }}" ${{ inputs.tag }} *.deb
  docker:
    name: Deploy Docker Image
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Login to GitHub Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.SYN_BOT_READ_WRITE }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: jacobhoehler
          password: ${{ secrets.DOCKERHUB_JH }}
      - name: Construct Dev Tag
        run: echo "DEV_IMAGE=ghcr.io/${{ github.repository }}:${{ inputs.tag }}" >> $GITHUB_ENV

      - name: Pull Image
        run: docker pull "${{ env.DEV_IMAGE }}"

      - name: Create Image Tags
        run: |
          echo "GHCR_PROD_IMAGE=ghcr.io/${{ inputs.prod_repo }}:${{ inputs.tag }}" >> $GITHUB_ENV
          echo "GHCR_PROD_LATEST_IMAGE=ghcr.io/${{ inputs.prod_repo }}:latest" >> $GITHUB_ENV
          echo "DH_PROD_IMAGE=synthetik/blastfoam:latest" >> $GITHUB_ENV
          echo "DH_PROD_LATEST_IMAGE=synthetik/blastfoam:${{ inputs.tag }}" >> $GITHUB_ENV

      - name: Tag Images
        run: |
          docker tag ${{ env.DEV_IMAGE }} ${{ env.GHCR_PROD_IMAGE }}
          docker tag ${{ env.DEV_IMAGE }} ${{ env.GHCR_PROD_LATEST_IMAGE }}
          docker tag ${{ env.DEV_IMAGE }} ${{ env.DH_PROD_IMAGE }}
          docker tag ${{ env.DEV_IMAGE }} ${{ env.DH_PROD_LATEST_IMAGE }}

      - name: Push Images
        run: |
          docker push ${{ env.GHCR_PROD_IMAGE }}
          docker push ${{ env.GHCR_PROD_LATEST_IMAGE }}
          docker push ${{ env.DH_PROD_IMAGE }}
          docker push ${{ env.DH_PROD_LATEST_IMAGE }}
