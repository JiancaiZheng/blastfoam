name: Build blastFOAM Debian Package

on:
  push:
    branches:
      - "packaging/debian"

concurrency:
  group: blastfoam
  cancel-in-progress: true

jobs:
  build:
    runs-on: ["self-hosted", "deb", "openfoam"]
    name: Build BlastFoam
    defaults:
      run:
        working-directory: blastfoam-src
    steps:
      - name: Checkout blastFOAM
        uses: actions/checkout@v3
        with:
          path: blastfoam-src
      - name: Build Tar for Cache
        run: tar -czf checksum.tar.gz --mtime='UTC 2019-01-01' --group=0 --owner=0 --numeric-owner --sort=name Makefile applications debian etc src
      - name: Check Cache
        id: check-cache
        uses: actions/cache@v3
        with:
          path: blastfoam_*.deb
          key: ${{ hashFiles('blastfoam-src/checksum.tar.gz') }}
      - name: Build from makefile
        if: ${{ steps.check-cache.outputs.cache-hit != 'true' }}
        run: debuild --no-lintian -i -nc -us -uc -b --jobs=10
      - name: Output Debian Package
        uses: actions/upload-artifact@v3
        with:
          name: blastfoam-untested.deb
          path: ${{ github.workspace }}/blastfoam_*.deb
          retention-days: 7
  version:
    name: Shorten SHA
    runs-on: ubuntu-latest
    steps:
      - name: Get Short SHA
        id: get-short-sha
        uses: synthetik-technologies/actions/composites/sha-versioning@v1.1.1
    outputs:
      version: ${{ steps.get-short-sha.outputs.version }}

  build-docker:
    name: Build Docker Image
    needs:
      - build
      - version
    runs-on: "ubuntu-latest"
    steps:
      - name: Download Debian Package
        uses: actions/download-artifact@v3
        with:
          name: blastfoam-untested.deb
          path: ${{ github.workspace }}
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Build and Push Image
        uses: synthetik-technologies/actions/composites/docker-build-push@8-add-actions-for-blastfoam
        with:
          ssh-key-needed: "false"
          image: blastfoam-dev
          image-registry: ghcr.io/synthetik-technologies
          version: ${{ needs.version.outputs.version }}

  install-and-validate:
    strategy:
      fail-fast: false
      matrix:
        include:
          - solver: blastFoam
            validation: "rateStick"
          - solver: blastFoam
            validation: Sod_shockTube
          - solver: blastFoam
            validation: solidImpact #* uses code templates
          - solver: blastFoam
            validation: "Sedov/Sedov_2D"
          - solver: blastFoam
            validation: "Sedov/Sedov_3D"
          - solver: blastFoam
            validation: "KingeryBulmash/KingeryBulmash_wedge"
          - solver: blastEulerFoam
            validation: shockTube_dilute
          - solver: blastEulerFoam
            validation: shockTube_dense
          - solver: blastEulerFoam
            validation: shockTube_bidisperse
          - solver: blastFoam
            tutorial: building3DWorkshop
          - solver: blastFoam
            tutorial: delayedDetonation
          - solver: blastFoam
            tutorial: movingCrane
          - solver: blastFoam
            tutorial: shockTubeTabulated
          - solver: blastReactingFoam
            tutorial: obliqueShock
          - solver: setRefinedFields
            tutorial: .
    runs-on: ["self-hosted", "deb", "openfoam"]
    name: Validate ${{ matrix.solver }} on ${{ matrix.validation }} ${{ matrix.tutorial }}
    needs:
      - build
    steps:
      - name: Download Debian Package
        uses: actions/download-artifact@v3
        with:
          name: blastfoam-untested.deb
          path: ${{ github.workspace }}
      - name: Install Debian Package
        run: sudo dpkg -i blastfoam_*.deb
      - name: Checkout blastFOAM
        uses: actions/checkout@v3
        with:
          path: blastfoam-src
      - name: Run ${{ matrix.solver }}
        shell: bash -l {0}
        run: |
          source /opt/openfoam9/etc/bashrc
          source /opt/blastfoam/etc/bashrc
          echo "SOLVER=${{ matrix.solver }}" >> $GITHUB_ENV
          if [ -n "${{ matrix.validation }}" ]; then
            ./blastfoam-src/validation/${{ matrix.solver }}/${{ matrix.validation }}/Allrun
            echo "TYPE=validation" >> $GITHUB_ENV
            echo "SCENARIO=${{ matrix.validation }}" >> $GITHUB_ENV
          else
           ./blastfoam-src/tutorials/${{ matrix.solver }}/${{ matrix.tutorial }}/Allrun
           echo "TYPE=tutorials" >> $GITHUB_ENV
           echo "SCENARIO=${{ matrix.tutorial }}" >> $GITHUB_ENV
          fi
      - name: Upload Validation Plots
        if: env.TYPE == 'validation'
        uses: actions/upload-artifact@v3
        with:
          name: validation-plots
          path: |
            blastfoam-src/${{ env.TYPE }}/${{ env.SOLVER }}/${{ env.SCENARIO }}/validation/*.eps
          retention-days: 30
      - name: Uninstall Debian Package
        run: sudo dpkg -r blastfoam
